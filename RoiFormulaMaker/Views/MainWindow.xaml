<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:local="clr-namespace:RoiFormulaMaker.Views"
        xmlns:vm="clr-namespace:RoiFormulaMaker.ViewModels"
        xmlns:ac="clr-namespace:RoiFormulaMaker.Actions"
        xmlns:views="clr-namespace:RoiFormulaMaker.Views" x:Class="RoiFormulaMaker.Views.MainWindow"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance vm:MainWindowViewModel}"
        Title="{Binding Title}" SizeToContent="WidthAndHeight">
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="6"/>
            <Setter Property="Padding" Value="3"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="6"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="6"/>
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding MakeRingRoiRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <views:MakeRingRoiView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding MakeWallRoiRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <views:MakeWallRoiView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        
        <prism:InteractionRequestTrigger SourceObject="{Binding MakeRoiSubtractedRoiRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <views:MakeRoiSubtractedRoiView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding MakeMarginAddedRoiRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <views:MakeMarginAddedRoiView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding MakeOverlappedRoiRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <views:MakeOverlappedRoiView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <StackPanel Orientation="Vertical">

            <!--<views:MakeRing DataContext="{Binding MakeRingViewModel}"/>-->
            <Button Content="Add Ring ROI" Command="{Binding MakeRingRoiCommand}"/>
            <Button Content="Add Wall ROI" Command="{Binding MakeWallRoiCommand}"/>
            <Button Content="Add ROI Subtracted ROI" Command="{Binding MakeRoiSubtractedRoiCommand}"/>
            <Button Content="Add Margin Added ROI" Command="{Binding MakeMarginAddedRoiCommand}"/>
            <Button Content="Add Overlapped ROIs" Command="{Binding MakeOverlappedRoiCommand}"/>
            <StackPanel Orientation="Horizontal">
                <Label Content="Message:"/>
                <TextBlock  TextWrapping="Wrap" Text="{Binding Message}" Margin="5,6,6.6,6" Foreground="Red"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                <Button Command="{Binding ChooseFileCommand}" Content="Choose File" Width="140"/>
                <Label Content="Chosen file:" VerticalAlignment="Center" />
                <TextBlock Text="{Binding FilePath}" VerticalAlignment="Center"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Button Command="{Binding SaveFileCommand}" Content="Save to File" Width="140"/>
                <Label Content="Description: " VerticalAlignment="Center"/>
                <TextBox Text="{Binding Description}" MinWidth="480" VerticalAlignment="Center">
                </TextBox>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <Button Content="OK" Width="140">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <prism:InvokeCommandAction Command="{Binding OkCommand}"/>
                            <ac:CloseWindowAction/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Content="Cancel" Width="140">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <!--<prism:InvokeCommandAction Command="{Binding CancelCommand}"/>-->
                            <ac:CloseWindowAction/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
            <!--<Label Content="Structure Descriptions:"/>
            <TextBlock Text="{Binding StructureDescriptions}"></TextBlock>-->
            <Button Command="{Binding DeleteStructureFormulasCommand}" Content="Delete checked items" HorizontalAlignment="Left">
            </Button>
            <DataGrid ItemsSource="{Binding MakeRoiViewModels}" AutoGenerateColumns="False" CanUserAddRows="False" MaxHeight="300" MaxWidth="1450" Margin="6,6,6,6" HorizontalAlignment="Left">
                <DataGrid.Columns>
                    <DataGridTemplateColumn IsReadOnly="True" Header="Delete">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Edit">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button
                                Content="Edit"
                                Command="{Binding MakeRoiCommand}" Margin="0" Padding="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn
                    Header="Description"
                    Binding="{Binding StructureDescription, Mode=OneWay}"
                    IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="3,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
    </Grid>
</Window>
