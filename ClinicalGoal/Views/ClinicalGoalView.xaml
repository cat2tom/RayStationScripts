<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ac="clr-namespace:ClinicalGoal.Actions"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ViewModels="clr-namespace:ClinicalGoal.ViewModels"
             x:Class="ClinicalGoal.Views.ClinicalGoalView"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"         
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1200" d:DataContext="{d:DesignInstance {x:Type ViewModels:ClinicalGoalViewModel}}"
              FontSize="24">
    <UserControl.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="6"/>
            <Setter Property="Padding" Value="3"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="6"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="6"/>
        </Style>
        <Style TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="6"/>
            <Setter Property="Padding" Value="3"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <StackPanel>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                <Button Command="{Binding ChooseFileCommand}" Content="Choose File" Width="140"/>
                <Label Content="Chosen file:" />
                <TextBlock Text="{Binding ProtocolFilePath}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Message:"/>
                <TextBlock Text="{Binding Message}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="4">
                <Button Content="OK" Width="120">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <prism:InvokeCommandAction Command="{Binding OkCommand}"/>
                            <ac:CloseWindowAction/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Content="Cancel" Width="120">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <prism:InvokeCommandAction Command="{Binding CancelCommand}"/>
                            <ac:CloseWindowAction/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Protocol ID:"/>
                <TextBlock Text="{Binding ProtocolId}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Prescribed Dose [cGy]:"/>
                <TextBox Text="{Binding PrescribedDose}" MinWidth="96"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Clear all clinical goals:"/>
                <CheckBox IsChecked="{Binding ClearAllExistingClinicalGoals, Mode=TwoWay}" VerticalAlignment="Center">
                    <CheckBox.RenderTransform>
                        <ScaleTransform ScaleX="2.0" ScaleY="2.0"/>
                    </CheckBox.RenderTransform>
                </CheckBox>
            </StackPanel>
            <DataGrid ItemsSource="{Binding DvhObjectives}" AutoGenerateColumns="False" CanUserAddRows="False" FontSize="12" MaxHeight="400">
                <DataGrid.Columns>
                    <DataGridTemplateColumn IsReadOnly="True" Header="In Use">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding InUse, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn
                    Header="Title"
                    Binding="{Binding Title, Mode=OneTime}" IsReadOnly="True">
                    </DataGridTextColumn>
                    <DataGridTextColumn
                    Header="Structure"
                    Binding="{Binding StructureName, Mode=OneTime}"
                    IsReadOnly="True">
                    </DataGridTextColumn>
                    <!--<DataGridTextColumn
                    Header="Structure (TPS)"
                    Binding="{Binding StructureNameTps, Mode=OneTime}"
                    IsReadOnly="True">
                    </DataGridTextColumn>-->
                    <DataGridTemplateColumn IsReadOnly="True" Header="Structure (TPS)">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Path=DataContext.StructureNames, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Mode=OneWay}"
                                          SelectedValue="{Binding StructureNameTps, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                    <DataGridTextColumn
                    Header="D or V"
                    Binding="{Binding TargetType, Mode=OneTime}"
                    IsReadOnly="True">
                    </DataGridTextColumn>
                    <DataGridTextColumn
                    Header="x"
                    Binding="{Binding ArgumentValue, Mode=OneTime}"
                    IsReadOnly="True">
                    </DataGridTextColumn>
                    <DataGridTextColumn
                    Header=""
                    Binding="{Binding ActualArgumentUnit, Mode=OneTime}"
                    IsReadOnly="True">
                    </DataGridTextColumn>
                    <DataGridTextColumn
                    Header="Goal"
                    Binding="{Binding TargetValue, Mode=OneTime}"
                    IsReadOnly="True">
                    </DataGridTextColumn>
                    <DataGridTextColumn
                    Header=""
                    Binding="{Binding ActualTargetUnit, Mode=OneTime}"
                    IsReadOnly="True">
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
    </Grid>
</UserControl>
